<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>gmssl</artifactId>
        <groupId>org.openeuler</groupId>
        <version>1.1.3</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>sdfprovider</artifactId>
    <version>1.1.3</version>
    
    <properties>
        <surefire.argLine/>
        <native-maven-plugin.version>1.0-M1</native-maven-plugin.version>
        <native.compiler.startOptions>
            -g
            -fPIC
            -fsigned-char
            -fno-aggressive-loop-optimizations
            -Wno-unused-parameter
            -fno-gnu-unique
            -fstack-protector-all
            -I ${env.JAVA_HOME}/include/linux/
            -I ${env.JAVA_HOME}/include/
            -I ${basedir}/src/main/native
            -I ${project.build.directory}/include
        </native.compiler.startOptions>
        <native.link.startOptions>-shared</native.link.startOptions>
        <compiler.executable.x86_64>${env.SDF_EXECUTABLE_X86_64}</compiler.executable.x86_64>
        <compiler.executable.aarch64>${env.SDF_EXECUTABLE_AARCH64}</compiler.executable.aarch64>
        <compiler.library_path.x86_64>${env.SDF_LIBRARY_PATH_X86_64}</compiler.library_path.x86_64>
        <compiler.library_path.aarch64>${env.SDF_LIBRARY_PATH_AARCH64}</compiler.library_path.aarch64>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openeuler</groupId>
            <artifactId>commons</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openeuler</groupId>
            <artifactId>jca</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openeuler</groupId>
            <artifactId>jsse</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>jdk17</id>
            <activation>
                <jdk>17</jdk>
            </activation>
            <properties>
                <surefire.argLine>
                    --add-exports=java.base/jdk.internal.misc=ALL-UNNAMED
                    --add-exports=java.base/jdk.internal.access=ALL-UNNAMED
                    --add-exports=java.base/sun.security.x509=ALL-UNNAMED
                    --add-exports=java.base/sun.security.action=ALL-UNNAMED
                    --add-exports=java.base/sun.security.provider=ALL-UNNAMED
                    --add-exports=java.base/sun.security.provider.certpath=ALL-UNNAMED
                    --add-exports=java.base/sun.net.util=ALL-UNNAMED
                    --add-opens=java.base/sun.security.util=ALL-UNNAMED
                    --add-exports=java.base/sun.security.pkcs=ALL-UNNAMED
                    --add-exports=java.base/sun.security.internal.spec=ALL-UNNAMED
                    --add-opens=java.base/sun.security.ssl=ALL-UNNAMED
                    --add-opens=java.base/javax.crypto=ALL-UNNAMED
                    --add-opens=java.base/sun.security.x509=ALL-UNNAMED
                    --add-opens=java.base/sun.security.pkcs12=ALL-UNNAMED
                    --add-exports=java.base/sun.security.jca=ALL-UNNAMED
                    --add-exports=jdk.crypto.cryptoki/sun.security.pkcs11.wrapper=ALL-UNNAMED
                </surefire.argLine>
            </properties>
        </profile>
    </profiles>

    <!--
      // compile
      export LIBRARY_PATH=/home/user/workspace/GM0018-20240204/SDK/Linux/aarch64
      // run
      export LD_LIBRARY_PATH=/home/user/workspace/GM0018-20240204/SDK/Linux/aarch64
    -->
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <finalName>${project.artifactId}-${project.version}</finalName>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>${native-maven-plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <!-- x86_64 -->
                    <execution>
                        <id>javah</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>javah</goal>
                        </goals>
                        <configuration>
                            <javahClassNames>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFDeviceNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFSessionNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFDigestNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFLogNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFRandomNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFSymmetricCipherNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFKeyGeneratorNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFSM2KeyPairGeneratorNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFSM2CipherNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFSM2SignatureNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFSM2KeyAgreementNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFRSAKeyPairGeneratorNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFRSACipherNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFHmacNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFECCKeyAgreementNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFPRFNative</javahClassName>
                                <javahClassName>org.openeuler.sdf.wrapper.SDFInternalNative</javahClassName>
                            </javahClassNames>
                            <javahOutputDirectory>${project.build.directory}/include</javahOutputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compile_linux_x86_64</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <compilerExecutable>${compiler.executable.x86_64}</compilerExecutable>
                            <compilerStartOptions>
                                <compilerStartOption>${native.compiler.startOptions}</compilerStartOption>
                            </compilerStartOptions>
                            <sources>
                                <source>
                                    <directory>${basedir}/src/main/native</directory>
                                    <includes>
                                        <include>*.c</include>
                                    </includes>
                                </source>
                            </sources>
                            <compilerOutputDirectory>
                                ${project.build.directory}/objs/linux_x86_64
                            </compilerOutputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>link_linux_x86_64</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>link</goal>
                        </goals>
                        <configuration>
                            <linkerExecutable>${compiler.executable.x86_64}</linkerExecutable>
                            <linkerStartOptions>
                                <linkerStartOptions>${native.link.startOptions}</linkerStartOptions>
                            </linkerStartOptions>
                            <linkerEndOptions>
                                <linkerEndOption>-L${compiler.library_path.x86_64}</linkerEndOption>
                                <linkerEndOption>-lswsds</linkerEndOption>
                            </linkerEndOptions>
                            <linkerFinalName>libsdfcrypto_linux_x86_64</linkerFinalName>
                            <linkerFinalNameExt>so</linkerFinalNameExt>
                            <linkerOutputDirectory>${project.build.directory}</linkerOutputDirectory>
                        </configuration>
                    </execution>

                    <!-- aarch64 -->
                    <execution>
                        <id>compile_linux_aarch64</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <compilerExecutable>${compiler.executable.aarch64}</compilerExecutable>
                            <compilerStartOptions>
                                <compilerStartOption>${native.compiler.startOptions}</compilerStartOption>
                            </compilerStartOptions>
                            <sources>
                                <source>
                                    <directory>${basedir}/src/main/native</directory>
                                    <includes>
                                        <include>*.c</include>
                                    </includes>
                                </source>
                            </sources>
                            <compilerOutputDirectory>
                                ${project.build.directory}/objs/linux_aarch64
                            </compilerOutputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>link_linux_aarch64</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>link</goal>
                        </goals>
                        <configuration>
                            <linkerExecutable>${compiler.executable.aarch64}</linkerExecutable>
                            <linkerStartOptions>
                                <linkerStartOptions>${native.link.startOptions}</linkerStartOptions>
                            </linkerStartOptions>
                            <linkerEndOptions>
                                <linkerEndOption>-L${compiler.library_path.aarch64}</linkerEndOption>
                                <linkerEndOption>-lswsds</linkerEndOption>
                            </linkerEndOptions>
                            <linkerFinalName>libsdfcrypto_linux_aarch64</linkerFinalName>
                            <linkerFinalNameExt>so</linkerFinalNameExt>
                            <linkerOutputDirectory>${project.build.directory}</linkerOutputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes/META-INF/native</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>*.so</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <classifier>${project.version}</classifier>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                    <argLine>
                        ${surefire.argLine}
                    </argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <finalName>${project.artifactId}</finalName>
    </build>
</project>
